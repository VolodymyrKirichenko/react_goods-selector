{"version":3,"sources":["Good.tsx","GoodList.tsx","App.tsx","index.tsx"],"names":["Good","props","isGoodSelected","good","goodToggleSelect","className","cn","RemoveButton","type","onClick","GoodList","goods","selectedGood","map","App","state","handleRemove","setState","handleAdd","item","isSelected","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2PASaA,EAAkB,SAACC,GAC9B,IAAQC,EAA2CD,EAA3CC,eAAgBC,EAA2BF,EAA3BE,KAAMC,EAAqBH,EAArBG,iBAE9B,OACE,qBACE,UAAQ,OACRC,UAAWH,EACP,+BACA,GAJN,UAME,6BACE,wBACE,UAASI,IAAG,YAAa,CACvBC,aAAcL,IAEhBM,KAAK,SACLH,UAAWC,IAAG,SAAU,CAAE,UAAWJ,IACrCO,QAAS,kBACPL,EAAiBD,EAAMD,IAP3B,SAUGA,EAAiB,IAAM,QAI5B,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGF,QC1BIO,EAAsB,SAACT,GAClC,IAAQU,EAA0CV,EAA1CU,MAAOC,EAAmCX,EAAnCW,aAAcR,EAAqBH,EAArBG,iBAE7B,OACE,uBAAOC,UAAU,QAAjB,SACE,gCACGM,EAAME,KAAI,SAACV,GACV,IAAMD,EAAiBU,IAAiBT,EAExC,OACE,cAAC,EAAD,CACED,eAAgBA,EAChBC,KAAMA,EACNC,iBAAkBA,YCjBnBO,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWG,EAAb,4MACEC,MAAQ,CACNH,aAAc,OAFlB,EAKEI,aAAe,WACb,EAAKC,SAAS,CAAEL,aAAc,MANlC,EASEM,UAAY,SAACf,GACX,EAAKc,SAAS,CAAEL,aAAcT,KAVlC,EAaEC,iBAAmB,SAACe,EAAcC,GAC5BA,EACF,EAAKJ,eAEL,EAAKE,UAAUC,IAjBrB,4CAqBE,WACE,IAAQP,EAAiBS,KAAKN,MAAtBH,aAER,OACE,uBAAMP,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGO,EAAY,UAAMA,EAAN,gBAAmC,oBAGhD,wBACE,UAAQ,cACRJ,KAAK,SACLH,UAAU,cACVI,QAASY,KAAKL,kBAIlB,cAAC,EAAD,CACEL,MAAOA,EACPC,aAAcA,EACdR,iBAAkBiB,KAAKjB,0BAzCjC,GAAyBkB,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e2dd3f8.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  isGoodSelected: boolean,\n  good: string,\n  goodToggleSelect: (item: string, isSelected: boolean) => void;\n}\n\nexport const Good: FC<Props> = (props) => {\n  const { isGoodSelected, good, goodToggleSelect } = props;\n\n  return (\n    <tr\n      data-cy=\"Good\"\n      className={isGoodSelected\n        ? 'has-background-success-light'\n        : ''}\n    >\n      <td>\n        <button\n          data-cy={cn('AddButton', {\n            RemoveButton: isGoodSelected,\n          })}\n          type=\"button\"\n          className={cn('button', { 'is-info': isGoodSelected })}\n          onClick={() => (\n            goodToggleSelect(good, isGoodSelected)\n          )}\n        >\n          {isGoodSelected ? '-' : '+'}\n        </button>\n      </td>\n\n      <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n        {good}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Good } from './Good';\n\ninterface Props {\n  goods: string[],\n  selectedGood: string,\n  goodToggleSelect: (item: string, isSelected: boolean) => void;\n}\n\nexport const GoodList: FC<Props> = (props) => {\n  const { goods, selectedGood, goodToggleSelect } = props;\n\n  return (\n    <table className=\"table\">\n      <tbody>\n        {goods.map((good) => {\n          const isGoodSelected = selectedGood === good;\n\n          return (\n            <Good\n              isGoodSelected={isGoodSelected}\n              good={good}\n              goodToggleSelect={goodToggleSelect}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './GoodList';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleRemove = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  handleAdd = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  goodToggleSelect = (item: string, isSelected: boolean) => {\n    if (isSelected) {\n      this.handleRemove();\n    } else {\n      this.handleAdd(item);\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood ? `${selectedGood} is selected` : 'No goods selected'}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={this.handleRemove}\n          />\n        </h1>\n\n        <GoodList\n          goods={goods}\n          selectedGood={selectedGood}\n          goodToggleSelect={this.goodToggleSelect}\n        />\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}